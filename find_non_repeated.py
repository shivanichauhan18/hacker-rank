str="cdohzvslmvruydjxaoubfdtlsrglnrbddrvfjgdvudkkyjlrxopdaeuljszxwxvrmshhhgvulafgtblghrmfptwbhhzndbskjbcmtukqeszkspmymfghntsxbfmzfwayhabrbcpnzpesqhqnmmujwnzvomomdrglnlqaszzkopbefvjsftpfrdfchzovytmhzleasxqgzhvcjmbunbtvscepuakwqpuwbfsdonubkkbnetbczunbyyucmewnyyvpgglegfhnzbllwdxkjsgfdglasgskrhjtglfrhrjbswymucenwerkrrjwmmbzowolwlwadwdksfubvljtttgwtywmqhftnelmeccmypwsafzqvjjrmnosezzgnaehtjgrcjkqmoxkosyhhmvrxjcahjfnjwhwltpkdggpexjjgffdzbhvvcxjobskwcaghfxzrssdnkjbqxztcpgarsytehzpkyoaatkjfuecobygafxvbywwhawubgrgcxkdlcedxwuhdgcvaelchgrtnvynrtywabgypzcluzctgtvhkmoaulvpqlunpnalguezpvlxtwqejdfacplxntakpmhvequphonbokfhrrbcpxuqxlsrtahbuycynampjgmamqdurvvqmkzrlcoacmgdaxqfxrebxoetzplomadhrpwjbvjzlmxogwsqpwrhgaqacprjwtwororcbcdesbqagrkaktleqjycyqazehncyjjrusynatqgadnhmgameosfaplttghsgqbgwxjkpcfrbtnqcrnxmwdqpoebzubpoxfckboaqzmkoxjweqgapxrazukgxxcxzwqncpwvdewgormmdwbheplssmwoenjceynyplmxddsedmluarrlydbtutoqeumlbaxwfjguojzabnghjsxsjwxpmsotlxkchapaakdvmnkcklerctkfpuqkrhbobaebtqhmejyngdyhbyouflfwlfuhxvfgsxtekmouxbkemnmlkgtfusrmkwfymjwlpfzpqullgevrldzfoyvthnwclgkdtdkeeoqjkrsouacjsrrgzylwbynbkftgyqfxkzrsoxoyofxzbjonjfqpbbkdogfexwwbuhfhdqjnoejveeebklyablbhanhvcjylxxhfrhxrvknamswurcgwhacakppbnpljlecnnzkxxfwkycltlkafdgqnhywqvwcggrodzbpafdsavrbeoqkzoarynomclpqnztwsakbcjdbbawjgjnohkfrgfxfemuhptyhbsukxcsxvhrxltnxrmjomyzebcknyltbjcltksocjtdtjjvogwardkqpcrxozsqwjsaaeyccnqueyjlrcalyatuqbhvmtmwxqldehgyloqclebewdyfqumxdgmxpvkyjvkrjdpunbnrvfrjjxejesvddwoqlwnfyuvfecjzegqkszdxatycmebjcxvgsdemfbqvwrropwjnhbwuqoodaslkwokzjrmtfhjmrzeesrsemtembawbtrzyrrzssmjonvjkhyqyzxweazmyhusqjugeyownpjwwrmugedyhnkpdsjdfloerqznyfhzqnctpbasbrlncwdrbmxshkndwzmffrmxhdhqyhvyrjojmtnxvcwmatjgaeoaoxbguocxgcgpexdgeferbwquaesyazttzozlnmsmxdeeeucnarbdngoymuchzokuedxyyknwvdgnjlakpzjrfdcjarvdoghunngoyepyeawenbndlhljsxkdlntajnmscvffseujrwcvceccnzjknbmmaksqrhznsqyfvlqewlxrpjwuflszcvjlyzmbaxmafyqvlbmqspcwswoprqcnwxokwzdxhfneugmxhzjkmlbvsecolvkmxqqdhsfgxowpzfhyjqohdxzyhshtvcgpvnesweksztkutkskclwzwrxjjdhgqadhajsurssphcphltupkuogubpvluxdmeayewrmttnubvskszzpxqpulxybkglxssvcwpugfvhewaxweyvcxapqmobpkaftnzqrvxetkphfuqjgtreyggakeddyxlmgagghthhvjymrlrfnzuaojckmpmtmabvtnvpvzdgdeogzjcwbpefxoaotauojbtswdhlrjmhopoebbkerqmouftabptcnntfflaghvjkestlsbpjauapeluwxafftvcdkbeshfrgymjkkmhzqzylcppfucawgmyogqayfxcrbphaeryhlkdepgzeaybsmybsuchkflxpcyrqqfzknxkhvnkokndhsssxwpvdoybsttlvhymfnyjlpalbturxrwpckmrejhmgmnbhpzqlorolclqfubhoowhodrxvjrkjrhxwvzgoqtncrbqnpkhoahseutggujfnuuafqzpbsgwejngslhgozarhqjkswnxgdmffjoqujwmtyhhonqgbwtkffksolodsqnkkegxrkdrvghnkfuauaozxqddzlactfgemrrpftltessczwtpdxdkkwfgbanumggwlpxqjbudhtdwgxhmmmxkksyrusmppmjckxwmnowyqvwojobbgsvsvhsetrcqezrjgvpbbpwmmmxobbcyaetkjjrsbvmgejcpdpjttpkhjtnsrncsxegshsumeebpfdqlvncdsljyocpbemjxxcfpdokaaptgumhzmxehcospmvsrfrxhcrtflsmjrapqhwrdhqtvfxjmxmjruudewyzlfcgujpejxhlhhnqbxxroyrwyssotpvarvprabvftfdqfmqbnsjlqatmtwvfpmfazdjenejzdklzujaogmxaxuphezqyzmgjacgbkuuepawnlrmeaoqptchaxnabrxxamvwrodgyogmbkauuvvoftuulohoxvlwqxvajvgkjheatemddowzlujrstuwulvohxwwbxuokwehyjptjorrhufrsqgafkcdfzafynrqhttelnxcffklpxwwytbeldedewogmdpgztdwmtqmgrecuxadxlblquudzeoxyatrtlpwedqdvcobrqnmcmcttoytvvzubemmylwajttbylkerfhxpmslmduruchnonrqtvbpdqouoxygqsuhlzxrvyfqbtqlovrvkpxdzwrcrdajmrutqkszvkefwzucapepfsabprzmpuldpqwltgfsoknnuhgkjfblktvtdckbadfzngepbjhgyzpxyuuvzlrahgvekqgjbmtytlmresexbqzderpwkduwsbvrpkjnuhykfqtjdrkjqhkpatxnzetcmxqdmmvgkwamdzzkfjnvzaayyowuapznwhghfekrwvjyzohqxmpvtcsstuveyzpvwxxuysqjxhdvlqzaoqtshgssdymslunqsbtsqrwqnectpwsqohpcqsapdlqbnxhbjyalflxzmwqunvtqtdbktjjqwahngpzvpnxlrgpwzhzkexxkrygwyrjoanfmxsphyoccougbroewlcqhqfpkkwqaflpvocvxeeshxbqovzwgknxvlaadkbcyobksybmewsozfmzcgnhhdqqvoqgkqkasprbuvauxsphyotoxpnafkfvnatsatzdeohfxojdahyzpekjpnkczrzfttyekakwcdvcxchsftlputsfqdxnmrzudgxdjzggcnmugoxhqnchgzhfyvumqhjburpwbuqhlvtjobwzhramkfztzjpargpkxlpfcvwrugtwqewpbexltwzmsonbunlxuamhysdmwcdvphgqztdyfooekpcwozjddezzmerqmccupwcpgyauhhzxxcarxatwmhbdmpvypbucyrvkkhrdglpovhcfjxtdypefyhfgjsglufwcaofspwzcwwosdzxnradxybbpakgabdxbzmeskazsncvzdrwqluaxnznzrsktlayjfwhextvzfbczuyksrwzrqhvtgparnmudpljwbbtxswqhmvyhtknbcfnnagjjhebnngnggwmsuhswxcsobxlwsfzqrqpsuoaljjwpdotdtghpzcgmxksprtozoyukkejkdnvvxyzecfeggbkrqgzfcodqlnplvsmzknkhmmsvuvvgjvdtynduaqohpjfnhuccytvemzlvjstqmdftjtcyrggbfnuetfzzlyvuptaozypjagtlqmohbsmeyfmuafffcxewscnbrnsgpzxnmypgluztydgevzxarnbwwsqsgxoojdndwbxvbbdaqbnqmlvxeduewcwpfuxtbzytdxpjyqnsyspgtuxkmtqesdmeftouxtgjoguqdogzkzagmoqhevlzjcmpxdtozsjbffzxlkmgdffzbqtrptfmpdgjzpmgderhlhmwbbudktmbcrhfbdskfpezhxsotgefknmjyekzjogatfvoemtrrhvymzwuavowaptsmynhwcbkycdnnewetwbsuskweglaoxmqvjsnoepanbfcobgdrwdlmajlbhhugwcxhktzonugnknsptkvawkgszanryhhbooafdodrzczvkzfwhdruyfqwlvuccotumydrtgecyrrbutknbzmrjgvawhyxjspelbbamvrcnruyvqtwlllfcnewntztnvjjayralhmgvksayterjtpjcxrtxjulmxewxrwhggxazztavjyeohnzdkcpmtfmxjymbmzmgmuslafpqnwymfyfkzaxjnnsepaghlsgscfsxdhnqqdsrvhalraoqpmrfxsbgqpchblcdgovnulnduqhnmbchhxvcgkpmphmkyetsofzkjsfllyvwbrrpqxppldekdvxysctebsonkaytlhlzcjnkgqgsoqyztezalctkjyywgvyxhnnfbxwzrgsdeqpowrthfpxcvxcumyftjprwfdvslmorygxduzfukhvkraxblykgzabdxgewglwadvuoklxlvcxmgchwbnbsycogskarmkxszzcmlwjakpvbrf"

def firstNotRepeatingCharacter(s):
    ar=[]
    for i in s:
        if i not in s:
            ar.append(i)
    if ar == []:
        return "_"
    else:
        return ar[0]
print firstNotRepeatingCharacter(str)


def firstNotRepeatingCharacter(s):
    ar=[]
    str=list(s)
    l=len(str)
    for i in range(0,l):
        fleg=0
        for j in range(0,l):
            if str[i] == str[j]:
                fleg=fleg+1
        if fleg <= 1:
            return str[i]
    else:
        return "_"
firstNotRepeatingCharacter(str)


s="aabcbbd"
def firstNotRepeatingCharacter(s):
    for c in s:
        if s.find(c) == s.rfind(c):
            return c
    return '_'

print firstNotRepeatingCharacter(s)